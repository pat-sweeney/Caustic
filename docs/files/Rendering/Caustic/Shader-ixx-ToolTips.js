NDContentPage.OnToolTipsLoaded({7:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype7\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">CRefCount</div></div></div><div class=\"TTSummary\">Defines a base class that all our reference counted objects are derived from. When an obejcts reference count goes to 0 the object will be deleted.</div></div>",870:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype870\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">ShaderParamDef</div></div></div><div class=\"TTSummary\">ShaderParamDef defines the shader definitions that were parsed from HLSL by ParseShader. These definitions define the variables that each shader defines (i.e. may be set by the client)</div></div>",1062:"<div class=\"NDToolTip TInterface LC\"><div class=\"TTSummary\">Defines the public interface to a buffer used by the GPU. When clients need to pass data to a compute shader (i.e. as either a StructuredBuffer, RWStructuredBuffer, AppendStructuredBuffer, or RWByteAddressBuffer) they will pass one of these objects via IShader::SetCSParam().</div></div>",1067:"<div class=\"NDToolTip TInterface LC\"><div class=\"TTSummary\">Defines the public interface for using CShader</div></div>",871:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype871\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">ShaderParamInstance</div></div></div><div class=\"TTSummary\">ShaderParamInstance defines each parameter that a shader exposes. These parameters are derived from the ShaderParamDefs above. This is servers copy of each parameter along with its value and position in the constant buffer.</div></div>"});