NDSummary.OnToolTipsLoaded("File:Rendering/Caustic/Shader.ixx",{775:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype775\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">ShaderParamDef</div></div></div><div class=\"TTSummary\">ShaderParamDef defines the shader definitions that were parsed from HLSL by ParseShader. These definitions define the variables that each shader defines (i.e. may be set by the client)</div></div>",776:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype776\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">ShaderParamInstance</div></div></div><div class=\"TTSummary\">ShaderParamInstance defines each parameter that a shader exposes. These parameters are derived from the ShaderParamDefs above. This is servers copy of each parameter along with its value and position in the constant buffer.</div></div>",777:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype777\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">SBuffer</div></div></div><div class=\"TTSummary\">Defines a buffer (which may be either a constant buffer or and unordered access buffer used by a compute shader).</div></div>",778:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype778\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">CGPUBuffer</div></div></div><div class=\"TTSummary\">Defines a buffer that is created by the client for passing/receiving data from a compute shader.</div></div>",779:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype779\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">CShader</div></div></div><div class=\"TTSummary\">Defines a shader used to render materials on an object</div></div>"});