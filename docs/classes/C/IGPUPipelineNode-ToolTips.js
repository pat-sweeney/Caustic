NDContentPage.OnToolTipsLoaded({61:"<div class=\"NDToolTip TStruct LC\"><div class=\"TTSummary\">CRefObj is a smart class (similar to CComPtr) for managing a IRefCount-ed object\'s lifetime.</div></div>",704:"<div class=\"NDToolTip TInterface LC\"><div class=\"TTSummary\">Defines the public interface for using CShader</div></div>",730:"<div class=\"NDToolTip TInterface LC\"><div class=\"TTSummary\">Defines how clients interact with textures</div></div>",807:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype807\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual void</span> Enable() = <span class=\"SHNumber\">0</span></div><div class=\"TTSummary\">Turns on a GPU node. If enabled when GPUPipeline::Process() is called this node will run (along with all its proceeding pipeline nodes).&nbsp; Otherwise, the node is not executed, and its Output texture is undefined.</div></div>",1278:"<div class=\"NDToolTip TInterface LC\"><div class=\"TTSummary\">Defines the base class for each node in a GPU pipeline</div></div>",1283:"<div class=\"NDToolTip TInterface LC\"><div class=\"TTSummary\">The IGPUPipeline object is used to create a graph of GPU shaders that will process images.&nbsp; A pipeline is built out of a series of IGPUPipelineNode\'s. Each node is conceptually just a pixel shader to be run on its input image data.&nbsp; The general structure of a GPU graph looks something like:</div></div>",205:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype205\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">CGPUPipelineNodeBase</div></div></div><div class=\"TTSummary\">Define the base class for nodes in our pipeline</div></div>"});