NDSummary.OnToolTipsLoaded("CClass:Vector3",{72:"<div class=\"NDToolTip TStruct LC\"><div class=\"TTSummary\">Defines a simple vector with 3 components</div></div>",74:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype74\" class=\"NDPrototype NoParameterForm\">Vector3()</div><div class=\"TTSummary\">Default constructor</div></div>",75:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype75\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Vector3(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">_x,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">_y,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">_z</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor</div></div>",76:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype76\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">int</span> Sign()</div><div class=\"TTSummary\">Returns -1 or +1 depending on direction vector is pointing</div></div>",77:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype77\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> IsEq(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Vector3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">p</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns whether two points are equivalent (within some tolerance)</div></div>",78:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype78\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Vector3 cross(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">v</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the cross product between two vectors</div></div>",79:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype79\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">float</span> dot(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Vector3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">v</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the dot product between two vectors</div></div>"});