NDSummary.OnToolTipsLoaded("CClass:Vector3",{83:"<div class=\"NDToolTip TStruct LC\"><div class=\"TTSummary\">Defines a simple vector with 3 components</div></div>",1183:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1183\" class=\"NDPrototype NoParameterForm\">Vector3() : x(<span class=\"SHNumber\">0.0f</span>), y(<span class=\"SHNumber\">0.0f</span>), z(<span class=\"SHNumber\">0.0f</span>)</div><div class=\"TTSummary\">Default constructor</div></div>",86:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype86\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Vector3(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">_x,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">_y,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">_z</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Constructor</div></div>",87:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype87\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">int</span> Sign()</div><div class=\"TTSummary\">Returns -1 or +1 depending on direction vector is pointing</div></div>",88:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype88\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> IsEq(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Vector3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">p</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns whether two points are equivalent (within some tolerance)</div></div>",1184:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1184\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">Vector3 Cross(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Vector3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">v</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the cross product between two vectors</div></div>",1185:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1185\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">float</span> Dot(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Vector3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">v</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Returns the scalar product between two vectors</div></div>"});