NDSummary.OnToolTipsLoaded("CClass:IImageBase",{645:"<div class=\"NDToolTip TInterface LC\"><div class=\"TTSummary\">Base interface shared across all image types</div></div>",647:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype647\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> EImageType GetImageType() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns the type of data stored in the image</div></div>",648:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype648\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual uint8</span>* GetData() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns a pointer to the image data</div></div>",649:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype649\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual uint32</span> GetWidth() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns the image\'s width in pixels</div></div>",650:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype650\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual uint32</span> GetHeight() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns the image\'s height in pixels</div></div>",651:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype651\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual uint32</span> GetSubX() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns the X offset into our parent image (if this is a subimage)</div></div>",652:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype652\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual uint32</span> GetSubY() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns the Y offset into our parent image (if this is a subimage)</div></div>",653:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype653\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual uint32</span> GetBPP() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns the image\'s bites per pixel</div></div>",654:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype654\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual uint32</span> GetStride() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns the image\'s stride (bytes/scanline)</div></div>",655:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype655\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual uint32</span> GetBytesPerPixel() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns the number of bytes in each pixel</div></div>",656:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype656\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual bool</span> GetRGBOrder() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns whethers the pixel component layout in memory is Red/Green/Blue.&nbsp; This is the default. Otherwise, it\'s in Blue/Green/Red ordering.</div></div>",657:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype657\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetRGBOrder(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">isRGB</td></tr></table></td><td class=\"PAfterParameters\">) = <span class=\"SHNumber\">0</span></td></tr></table></div></div><div class=\"TTSummary\">Sets whethers the pixel component layout in memory is Red/Green/Blue.&nbsp; This is the default. Otherwise, it\'s in Blue/Green/Red ordering.</div></div>",749:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype749\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> LexToken PeekToken() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns the next token without advancing the reader</div></div>",750:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype750\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">virtual</span> LexToken ReadToken() = <span class=\"SHNumber\">0</span></div></div><div class=\"TTSummary\">Returns the next token.</div></div>",751:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype751\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> SetParseTable(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ParseTableEntry*&nbsp;</td><td class=\"PName last\">pTable</td></tr></table></td><td class=\"PAfterParameters\">) = <span class=\"SHNumber\">0</span></td></tr></table></div></div><div class=\"TTSummary\">Set the list of keywords that the parser will isolate as individual tokens.</div></div>"});