//**********************************************************************
// Copyright Patrick Sweeney 2015-2021
// Licensed under the MIT license.
// See file LICENSE for details.
// File: Gaussian.ps
//**********************************************************************
#include "defs.h"

#define MAX_WEIGHTS 10

Texture2D sourceTexture1 : register(t0);
SamplerState sourceSampler1 : register(s0);

cbuffer PS_CONSTANT_BUFFER
{
    float2 imageDims;
    float weights[MAX_WEIGHTS];
    int numWeights;
};

float4 PS(VSOutput p) : SV_Target
{
return sourceTexture1.Sample(sourceSampler1, p.uvs);
    float3 color = float3(0.0f, 0.0f, 0.0f);
    float2 deltauv = float2(1.0f / imageDims.x, 1.0f / imageDims.y);
    float2 uv = p.uvs - deltauv * numWeights / 2.0f;
    for (int i = 0; i < numWeights; i++)
    {
        color.xyz += weights[i] * sourceTexture1.Sample(sourceSampler1, uv).xyz;
        uv += deltauv;
    }
    return float4(color.xyz, 1.0f);
}
